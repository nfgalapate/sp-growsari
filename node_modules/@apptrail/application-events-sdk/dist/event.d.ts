/**
 * An Apptrail event is a record of a an activity performed on your customer resources in
 * your application.
 *
 * @see https://apptrail.com/docs/applications/guide/working-with-events/overview
 */
export interface ApptrailEvent {
    /**
     * Actor specifies the identity that performed the action being logged. This may be a user
     * or machine client. Consumers can filter based on this attribute.
     */
    actor?: Actor;
    /**
     * The context object contains fields that give customers additional information about the
     * environment in and source from which the activity recorded occurred
     */
    context?: Context;
    /**
     * Any additional custom information as a JSON object can be included in this field.
     */
    eventDetails?: {
        [key: string]: any;
    };
    /**
     * The name of the event as a string. You should represent unique events with unique names.
     * For example if you are adding audit logs to an API, event names could correspond to your
     * API methods.
     */
    eventName: string;
    /**
     * The time the event occurred. Formatted as an ISO 8601 formatted string, e.g.
     * 2021-12-06T16:09:38Z.
     */
    eventTime: string;
    /**
     * If applicable, contains information about the relevant resources that the action this
     * event is recording is related to.
     */
    resources?: Resource[];
    /**
     * Tags are key value metadata that you associate with events. Users can search and filter
     * events based on these tags.
     */
    tags?: {
        [key: string]: string;
    };
    /**
     * The ID of the tenant this event is associated with and will be delivered to. For more on
     * tenants @see https://apptrail.com/docs/applications/guide/working-with-tenants.
     */
    tenantId: string;
}
/**
 * Actor specifies the identity that performed the action being logged. This may be a user
 * or machine client. Consumers can filter based on this attribute.
 */
export interface Actor {
    /**
     * Additional arbitrary metadata related to the actor.
     */
    details?: {
        [key: string]: any;
    };
    /**
     * A string representing the identity of the actor.
     */
    id: string;
}
/**
 * The context object contains fields that give customers additional information about the
 * environment in and source from which the activity recorded occurred
 */
export interface Context {
    /**
     * The IP address the activity/request being recorded was made from.
     */
    sourceIpAddress?: string;
    /**
     * The agent through which the request was made, e.g. `Mozilla/5.0` or
     * `python-requests/2.20.1`.
     */
    userAgent?: string;
}
export interface Resource {
    /**
     * Additional arbitrary metadata related to the resource.
     */
    details?: {
        [key: string]: any;
    };
    /**
     * A unique identifier for this resource.
     */
    id: string;
}
